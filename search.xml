<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>了解Unicode编码</title>
      <link href="/2021/06/08/%E4%BA%86%E8%A7%A3Unicode%E7%BC%96%E7%A0%81/"/>
      <url>/2021/06/08/%E4%BA%86%E8%A7%A3Unicode%E7%BC%96%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><hr><p>程序为什么会乱码？ 通过了解编码知识，可以更好的了解这是为什么。</p><hr><h4 id="1-文本文件与二进制文件"><a href="#1-文本文件与二进制文件" class="headerlink" title="1 文本文件与二进制文件"></a>1 文本文件与二进制文件</h4><p>根据我们以往的经验，文本文件通常用来保存肉眼可见的字符，比如 .txt 文件、.c 文件、.dat 文件等，用文本编辑器打开这些文件，我们能够顺利看懂文件的内容。而二进制文件通常用来保存视频、图片、音频等不可阅读的内容，当用文本编辑器打开这些文件，会看到一堆乱码，根本看不懂。</p><p>实际上，从数据存储的角度上分析，二进制文件和文本文件没有区别，它们的内容都是以二进制的形式保存在磁盘中的。</p><p>我们之所以能看懂文本文件的内容，是因为文本文件中采用的是 ASCII、UTF-8、GBK 等字符编码，文本编辑器可以识别出这些编码格式，并将编码值转换成字符展示出来。而对于二进制文件，文本编辑器无法识别这些文件的编码格式，只能按照字符编码格式胡乱解析，所以最终看到的是一堆乱码。图片视频等二进制文件有特殊的软件用于解码。</p><h4 id="2-字符"><a href="#2-字符" class="headerlink" title="2 字符"></a>2 字符</h4><p>计算机在美国发明时，人们希望可以用计算机表示人们日常使用的字符，比如26个英文字母，数字，标点符号等。同时计算机在创建之初的一项重要作用就是打印，所以也需要对一些控制文档格式的字符进行表示，在美国人眼里这些字符被划分为两类。</p><ul><li><p>可见字符</p><ul><li>英文字母，数字，标点符号等</li></ul></li><li><p>控制字符</p><ul><li>回车，换行，空格等</li></ul></li></ul><p>在规划好要表示的字符后，人们用十进制数对每一个字符进行了对应，这个对应的字符叫做码位，然后将码位转换成了二进制数，以方便计算机的表示，即我们常说的<code>ASCII码</code>，又叫做<code>ASCII字符集</code>。</p><h4 id="3-ASCII码"><a href="#3-ASCII码" class="headerlink" title="3 ASCII码"></a>3 ASCII码</h4><p><code>ASCII</code>字符集定义了从0到127的字符编码。并且规定一个字符存储在一个8位的字节中。（在计算机中我们使用二进制来表示各种字符，一个字节等于8bit，既一个字节是由8位二进制组成的，根据排列组合的原则，一个字节可以表示256种不同的东西，将一个字节转换为十进制，则分别对应0到255，这样，我们可以通过这些不同的类型，代表我们要表达的字符）对应关系如下图所示。</p><p><img src="_data/res/001.png" alt="ASCII码表"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0111 1111  =&gt; 127</span><br><span class="line">左边四位是高四位，右边四位是低四位</span><br></pre></td></tr></table></figure><h4 id="4-扩展ASCII码"><a href="#4-扩展ASCII码" class="headerlink" title="4 扩展ASCII码"></a>4 扩展ASCII码</h4><p>在相当长的一段时间内，人们使用剩下的128到255这段中的字符去表示各种各样不同的语言中的字符，如西欧的<code>Latin-1</code>字符集。它在<code>ASCII</code>的基础上对剩余位置进行了扩充。</p><h4 id="5-中文字符编码"><a href="#5-中文字符编码" class="headerlink" title="5 中文字符编码"></a>5 中文字符编码</h4><p>由于中文字符比较多，所以设计时，使用分区管理的方式，采用16位表示一个汉字的方式，创造了<code>GB2312</code>，即使用两个字节去表示一个汉字。</p><p><code>GB2312</code>码兼容了<code>ASCII</code>，计算机中可以很好的区分这两个不同的编码。</p><p>后续通过调整码位，又扩充出了包含汉字字符更多的<code>GBK</code>字符集，在此基础上又新增了包含少数民族字符的<code>GB18030</code>。</p><h4 id="6-Unicode字符集"><a href="#6-Unicode字符集" class="headerlink" title="6 Unicode字符集"></a>6 Unicode字符集</h4><p>由于各个国家都采用了不同的字符集去表示各自国家的文字，导致了信息交换的困难，最后国际组织采用了<code>unicode</code>字符集表示规则，该表示规则尽可能的包含各国的不同字符，所以可以通过通用的<code>unicode</code>来表示各个国家常用的字符。</p><p><code>unicode</code>是一套字符集表示规则，但是他的存储方式却有很多种，因为不同的字符集在存储时，占用的字节数并不相同，造成了空间浪费。所以产生了各种各样的编码方式，比如<code>utf-8</code>一种可变长度的编码形式，他采用不同的字节来保存不同的字符。</p><p><code>UTF-8</code>是我们比较常用的一种编码方式。</p><p><img src="./res/002.png" alt="编码演示"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 概念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown简介</title>
      <link href="/2021/06/08/markdown%E7%AE%80%E4%BB%8B/"/>
      <url>/2021/06/08/markdown%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="markdown入门笔记"><a href="#markdown入门笔记" class="headerlink" title="markdown入门笔记"></a>markdown入门笔记</h1><h2 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h2><ul><li>参考书籍《了不起的Markdown》</li></ul><h2 id="1-Markdown简介"><a href="#1-Markdown简介" class="headerlink" title="1. Markdown简介"></a>1. Markdown简介</h2><ul><li>Markdown是由John Gruber在Aaron Swartz的帮助下开发的标记语言，发布于2004年;</li><li>Markdown是由一些简单的符号，组成的用于排版的标记语言,相当于简化了的HTML语言,让使用者专注于写作;</li><li>Markdown文档支持HTML标记语言的内嵌，用于处理一些特殊需求，如图像的排版;</li><li>Markdown本身功能有限，为了满足日益增加的使用场景，产生了许多扩展语法，在基础语法之上新增了表格，任务列表，围栏代码块等功能;</li><li>Markdown源码实现的文档可以由不同的编辑器，生成各种不同的格式（如PDF，图片等）;</li><li>Markdown不同的实现，催生了CommonMark规范的发布（2012年）,2017年GitHub基于规范标准发布了GitHub Flavored Markdown(简称GFM),是目前使用的最广泛的扩展版本;</li></ul><blockquote><p>综上所述,学习Markdown的几点建议:</p><ul><li>掌握Markdown的基本语法;</li><li>掌握一门通用的基于CommonMark规范的扩展版本，如GFM;</li><li>选择一个合适的编辑器用于渲染解析源码(如vscode,Typora等);</li></ul></blockquote><h2 id="2-Markdown基础语法"><a href="#2-Markdown基础语法" class="headerlink" title="2. Markdown基础语法"></a>2. Markdown基础语法</h2><p>同一种效果可以由多种方式去实现，类似茴香豆的多种写法，以下每种效果的规范只介绍最常使用的方式，有兴趣的朋友可以读下原书。</p><h3 id="2-1-标题"><a href="#2-1-标题" class="headerlink" title="2.1 标题"></a>2.1 标题</h3><p>语法如下所示：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># + 空格 + 标题内容</span></span><br></pre></td></tr></table></figure><blockquote><p>注意事项：</p><ul><li><code>#</code>号的个数表示了标题的等级;</li><li>Markdown中最多支持六级标题(一级标题最大，既使用一个<code>#</code>);</li><li>建议标题的前后都空一行，（标题在文档开头除外）;</li></ul></blockquote><h3 id="2-2-粗体和斜体"><a href="#2-2-粗体和斜体" class="headerlink" title="2.2 粗体和斜体"></a>2.2 粗体和斜体</h3><p>语法如下所示：</p><p><strong>粗体：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">** + 内容 + **</span></span><br></pre></td></tr></table></figure><p><strong>斜体：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> + 内容 + <span class="emphasis">*</span></span><br></pre></td></tr></table></figure><blockquote><p>注意事项：</p><ul><li>倾斜加粗的效果可以使用<code>*** + 内容 + ***</code>的方式表示;</li></ul></blockquote><h3 id="2-3-段落与换行"><a href="#2-3-段落与换行" class="headerlink" title="2.3 段落与换行"></a>2.3 段落与换行</h3><p>语法如下所示：</p><p><strong>段落：</strong></p><blockquote><ul><li>如果行与行之间没有空格，则会被视为同一段落;</li><li>如果行与行之间有空行，则会被视为不同的段落;</li><li>空行是指行内什么都没有，或者只有空格和制表符;</li></ul></blockquote><p><strong>换行：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">空格 + 空格 + 回车</span><br></pre></td></tr></table></figure><h3 id="2-4-列表"><a href="#2-4-列表" class="headerlink" title="2.4 列表"></a>2.4 列表</h3><p>语法如下所示：</p><p><strong>有序列表：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数字符号 + 英文句号 + 空格 + 列表内容</span><br></pre></td></tr></table></figure><p><strong>无序列表：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> + 空格 + 列表内容</span><br></pre></td></tr></table></figure><blockquote><p>注意事项：<br>列表支持相互嵌套：</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第一层列表</span><br><span class="line">TAB + 第二层列表</span><br><span class="line">TAB + TAB + 第三层列表</span><br></pre></td></tr></table></figure><blockquote><p>实例：</p></blockquote><ol><li>动物<ul><li>猫<ul><li>大花猫</li><li>小花猫</li></ul></li><li>狗</li></ul></li><li>植物<ul><li>树</li><li>花</li></ul></li></ol><h3 id="2-5-分割线"><a href="#2-5-分割线" class="headerlink" title="2.5 分割线"></a>2.5 分割线</h3><p>语法如下所示：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">---</span><br></pre></td></tr></table></figure><blockquote><p>注意事项：</p><ul><li>分割线需要使用至少3个以上的<code>-</code>来标记;</li><li>行内不能有其他的字符;</li><li>可以在标记符中间加上空格;</li></ul></blockquote><h3 id="2-6-图片和链接"><a href="#2-6-图片和链接" class="headerlink" title="2.6 图片和链接"></a>2.6 图片和链接</h3><p>语法如下所示：</p><p><strong>图片：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">图片替代文字</span>](<span class="link">图片地址</span>)</span><br></pre></td></tr></table></figure><p><strong>链接：</strong></p><ul><li>文字链接</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">链接文字</span>](<span class="link">链接地址</span>)</span><br></pre></td></tr></table></figure><ul><li>引用链接</li></ul><p>引用链接可以使得源码排版更为简洁，易读</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">链接文字</span>](<span class="link">链接标记</span>)</span><br><span class="line">[<span class="symbol">链接标记</span>]: <span class="link">链接地址</span></span><br></pre></td></tr></table></figure><blockquote><p>实例：</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">百度</span>][<span class="symbol">百度地址</span>]</span><br><span class="line"></span><br><span class="line">[<span class="symbol">百度地址</span>]: <span class="link">https://www.baidu.com</span></span><br></pre></td></tr></table></figure><p><a href="https://www.baidu.com/">百度</a></p><ul><li>网址链接</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">&lt;URL或邮箱地址&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>实例：</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">&lt;https://www.baidu.com&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://www.baidu.com/">https://www.baidu.com</a></p><blockquote><p>在扩展语法中，以<code>www或http://</code>开头的URL地址会被自动识别，通过使用行内代码语法包裹url可以避免被自动识别为网址链接。</p></blockquote><h3 id="2-7-行内代码和代码块"><a href="#2-7-行内代码和代码块" class="headerlink" title="2.7 行内代码和代码块"></a>2.7 行内代码和代码块</h3><p>语法形式如下所示：</p><p><strong>行内代码：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`内容`</span></span><br></pre></td></tr></table></figure><p><strong>代码块：</strong></p><p>基本语法中代码块的形式通常以TAB或者四个空格的形式开头，但是通常使用扩展语法中的围栏代码块用于代替这种不易读写的表达方式。详情请查看扩展语法中的围栏代码块一节。</p><pre><code>print(&quot;hello python3&quot;)</code></pre><h3 id="2-8-引用"><a href="#2-8-引用" class="headerlink" title="2.8 引用"></a>2.8 引用</h3><p>语法形式如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 引用内容</span></span><br></pre></td></tr></table></figure><blockquote><p>注意事项：</p><ul><li>多行引用也可以在每一行的开头都插入<code>&gt;</code>;</li><li>在引用中可以嵌套引用;</li><li>在引用中可以使用其他markdown的语法;</li><li>引用时建议以<code>&gt; + 空格 + 引用内容</code>的方式来进行书写。</li></ul></blockquote><h3 id="2-9-转义"><a href="#2-9-转义" class="headerlink" title="2.9 转义"></a>2.9 转义</h3><p>转义的作用是：想在Markdown文件中插入一些标记符号，但又不想让这些符号被渲染时，可以使用转义字符的形式，<code>\ + 特殊字符</code></p><h2 id="3-扩展语法GFM"><a href="#3-扩展语法GFM" class="headerlink" title="3 扩展语法GFM"></a>3 扩展语法GFM</h2><h3 id="3-1-删除线"><a href="#3-1-删除线" class="headerlink" title="3.1 删除线"></a>3.1 删除线</h3><p>语法形式如下下所示：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~ + 被删除的文字 + ~~</span><br></pre></td></tr></table></figure><blockquote><p>实例：</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~我在疯狂的copy~~</span><br></pre></td></tr></table></figure><p><del>我在疯狂的copy</del></p><h3 id="3-2-表情符号"><a href="#3-2-表情符号" class="headerlink" title="3.2 表情符号"></a>3.2 表情符号</h3><p>语法形式如下下所示：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:表情代码:</span><br></pre></td></tr></table></figure><blockquote><p>更多的表情代码参考：<br><a href="http://www.webpagefx.com/tools/emoji-cheat-sheet/">http://www.webpagefx.com/tools/emoji-cheat-sheet/</a></p></blockquote><blockquote><p>实例：</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:smile:</span><br></pre></td></tr></table></figure><p>:smile:</p><h3 id="3-3-表格"><a href="#3-3-表格" class="headerlink" title="3.3 表格"></a>3.3 表格</h3><p>语法形式如下所示：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 表头1 | 表头2 | 表头3 |</span><br><span class="line">| ----- | ----- | ----- |</span><br><span class="line">| 内容1 | 内容2 | 内容3 |</span><br><span class="line">| 内容1 | 内容2 | 内容3 |</span><br></pre></td></tr></table></figure><blockquote><p>注意事项：</p><ul><li>表头和请他行使用<code>-</code>来分隔;</li><li>在分隔行中的<code>-</code>结尾或者开头添加<code>:</code>可以控制表格的对齐方式，开头加左对齐，结尾加右对齐，两端加居中对齐;</li><li>引用区块和代码块不能插入到表格当中去;</li><li>表格中的分隔符号<code>-</code>数量是不限制的。</li></ul></blockquote><blockquote><p>实例：</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 序号  | 性别  |    姓名    |</span><br><span class="line">| :---: | :---: | :--------: |</span><br><span class="line">|   1   |  女   | Angelababy |</span><br><span class="line">|   1   |  女   |   佟丽娅   |</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">序号</th><th align="center">性别</th><th align="center">姓名</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">女</td><td align="center">Angelababy</td></tr><tr><td align="center">1</td><td align="center">女</td><td align="center">佟丽娅</td></tr></tbody></table><h3 id="3-4-任务列表"><a href="#3-4-任务列表" class="headerlink" title="3.4 任务列表"></a>3.4 任务列表</h3><p>语法形式如下所示：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> + [ + 空格 + ] + 内容</span><br><span class="line"><span class="bullet">-</span> + [+ x + ] + 内容</span><br></pre></td></tr></table></figure><blockquote><p>实例</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> [ ] 今日是否完成戒烟目标</span><br><span class="line"><span class="bullet">-</span> [x] 今日是否给老婆请安</span><br></pre></td></tr></table></figure><ul><li><input disabled="" type="checkbox"> 今日是否完成戒烟目标</li><li><input checked="" disabled="" type="checkbox"> 今日是否给老婆请安</li></ul><h3 id="3-5-围栏代码块"><a href="#3-5-围栏代码块" class="headerlink" title="3.5 围栏代码块"></a>3.5 围栏代码块</h3><p>语法形式如下所示：</p><p>```语言名称</p><p>代码片段</p><p>```</p><blockquote><p>注意事项：</p><ul><li>加入语言名称后，编辑器会提供语法高亮;</li></ul></blockquote><blockquote><p>实例：</p></blockquote><p>```python</p><p>print(“hello python3”)</p><p>```</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello python3&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="3-6-锚点"><a href="#3-6-锚点" class="headerlink" title="3.6 锚点"></a>3.6 锚点</h3><p>语法形式如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">锚点描述</span>](<span class="link">#锚点名</span>)</span><br></pre></td></tr></table></figure><blockquote><p>实例：</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">回到顶部</span>](<span class="link">#markdown基本语法学习</span>)</span><br></pre></td></tr></table></figure><p><a href="#markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0">回到顶部</a></p><blockquote><p>注意事项：</p><ul><li>锚点名称中不能含有空格，也不能含有特殊字符;</li><li>不适用html时，通常锚点就是markdown中的标题;</li><li>如果使用其他的锚点，可以结合html进行内嵌操作;</li></ul></blockquote><h2 id="4-编辑器"><a href="#4-编辑器" class="headerlink" title="4. 编辑器"></a>4. 编辑器</h2><h3 id="4-1-常使用的编辑器"><a href="#4-1-常使用的编辑器" class="headerlink" title="4.1 常使用的编辑器"></a>4.1 常使用的编辑器</h3><p>比较经常使用的两个编辑器是Typora和vscode,在参考的书籍中作者介绍了很多编辑器，这里只针对vscode涉及到的操作进行记录，有兴趣的朋友可以读读原书。</p><p>vscode本身对于markdown的支持只包含一些简单的语法解析，如任务列表，表情代码都是不支持的，所有需要通过插件的方式对vscode进行扩展。</p><h3 id="4-2-vscode中搭配的markdown插件"><a href="#4-2-vscode中搭配的markdown插件" class="headerlink" title="4.2 vscode中搭配的markdown插件"></a>4.2 vscode中搭配的markdown插件</h3><ol><li>提供智能感知和快捷操作的插件：Markdown All in One<ul><li>格式化表格(依托于vscode,<code>ALT + SHIFT + F</code>);</li><li>图片路径自动联想;</li><li>自定义代码片段(依托于vscode);;</li></ul></li><li>提供语法检查的插件：markdownlint</li><li>提供增强预览和更多扩展语法的插件：Markdown Preview Enhanced<ul><li>在预览界面按<code>Esc</code>键可以调出标题大纲界面;</li><li>该插件还支持Typora中的数学公式，流程图等功能;</li><li>支持文件引入功能;<ul><li>通过MPE插件可以进行文件的引用,支持引用.md, .html, .pdf, .png等格式的文件;</li><li>引入格式为：<code>@import &quot;文件名&quot;</code></li></ul></li></ul></li><li>从剪切板直接粘贴图片的插件：Paste Image<ul><li>在windows上使用Snipaste软件结合这个插件非常爽，F1截图-&gt;选择粘贴到剪切板-&gt;<code>ctrl + alt + v</code>直接粘贴到vscode正在编辑的markdown源码中;</li><li>插入的图片在源文件的同级目录下;</li></ul></li></ol><h3 id="4-3-工具支持的其他的扩展语法"><a href="#4-3-工具支持的其他的扩展语法" class="headerlink" title="4.3 工具支持的其他的扩展语法"></a>4.3 工具支持的其他的扩展语法</h3><p>虽然我们在上面的内容中了解基本的markdown语法和GFM扩展语言,但是一些比较有用的特殊的扩展语法我们也可以进一步了解一下，typora中的一些比较有用的扩展语法，在vscode中也可以通过MPE插件获取，所以接下来我们理解一下Typora中的一些常用的语法：</p><ul><li>高亮语法：<code>== + 内容 + ==</code>, 实例：==此处高亮==</li><li>下划线： <code>&lt;u&gt; + 内容 + &lt;/u&gt;</code>, 实例：<u>此处添加下划线</u></li><li>上标： <code>底部内容 + ^ + 上标内容 + ^</code>, 实例： x^2^</li><li>下标： <code>底部内容 + ~ + 上标内容 + ~</code>, 实例： H<del>2</del>O</li><li>数学公式： <code>$ + 数学公式 + $</code>, 实例：$f(x,y) = \frac{x^2}{y^3}$</li><li>支持注释内容，注释的形式采用html的注释方式<code>&lt;!-- 注释内容 --&gt;</code></li><li>通过使用<code>[TOC]</code>我们还可以生成目录，前面的内容写好后直接回车，就会在当前内容区生成目录</li><li>脚注功能<a href="%E6%8F%8F%E8%BF%B0%E8%AF%A5%E8%A1%8C%E5%86%85%E5%AE%B9">^这是一个脚注功能</a></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">脚注功能[^这是一个脚注功能]</span><br><span class="line">[<span class="symbol">^这是一个脚注功能</span>]: <span class="link">描述该行内容</span></span><br></pre></td></tr></table></figure><p>Typora中还支持图表功能，但是我们通常使用其他程序去绘制图表，然后引入到markdown当中，所以这里不介绍图表功能的实现，我们接下来具体说明下内嵌html功能和数学公式表示功能。</p><h3 id="4-4-内嵌html语法"><a href="#4-4-内嵌html语法" class="headerlink" title="4.4 内嵌html语法"></a>4.4 内嵌html语法</h3><p>在markdown的文件当中直接使用html标签既可以达到内嵌html标签的效果。</p><h3 id="4-5-数学公式"><a href="#4-5-数学公式" class="headerlink" title="4.5 数学公式"></a>4.5 数学公式</h3><p>在markdown中引入数学公式主要是两种方式，前面介绍的行内，以及块级，语法格式如下所示：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">LaTeX 数学式</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>Markdown中可以直接插入LaTeX数学式,具体的用法请查看以下博客</p><p>具体内容可转至该博客查看：<a href="https://www.cnblogs.com/nowgood/p/Latexstart.html">https://www.cnblogs.com/nowgood/p/Latexstart.html</a></p><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h2><ul><li>通过书上面的介绍我们初步认识了markdown的相关知识，从基础语法，流行的GFM语法，以及工具的扩展语法，都有涉及，基本涵盖了日常写博客和写操作文档的需求。</li><li>关于markdown更深层次的内容需要我们在日后花费更多的时间去探索和研究。</li><li>当然在写markdown时如果想要达到美观的效果，花费心思去专研排版，也是必须的，否则可能跟我一样，看起来有点一言难尽。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过hexo&amp;githubio搭建博客</title>
      <link href="/2021/06/08/%E9%80%9A%E8%BF%87hexo&amp;githubio%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2021/06/08/%E9%80%9A%E8%BF%87hexo&amp;githubio%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>内容截取</p><span id="more"></span><p>[TOC]</p><hr><p>通过Hexo项目结合GitHub Page搭建属于自己的博客</p><hr><h2 id="1-Hexo概述"><a href="#1-Hexo概述" class="headerlink" title="1. Hexo概述"></a>1. Hexo概述</h2><h3 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h3><p>Hexo 是一个博客框架。Hexo 使用 Markdown (或其他渲染引擎）解析文章，并生成静态资源站点。</p><h3 id="1-2-安装与启动"><a href="#1-2-安装与启动" class="headerlink" title="1.2 安装与启动"></a>1.2 安装与启动</h3><ol><li>环境准备</li></ol><p>安装<code>Hexo</code>项目前需要先保证机器上包含以下依赖工具</p><ul><li><a href="https://nodejs.org/en/">nodejs安装地址</a></li><li><a href="https://git-scm.com/">git安装地址</a></li></ul><ol start="2"><li>安装Hexo</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 国内使用npm可能比较慢，可以换淘宝的源</span></span><br><span class="line">npm config set registry https://registry.npm.taobao.org</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装hexo</span></span><br><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><ol start="3"><li>新建博客项目</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Hexo 将会在指定文件夹中新建所需要的文件, 不给定则默认使用当前目录</span></span><br><span class="line">hexo init &lt;folder&gt;  # 新建一个网站</span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line">npm install  # 安装依赖</span><br></pre></td></tr></table></figure><blockquote><p>初始化<code>Hexo</code>, 在<code>windows10</code>下通过<code>dos</code>命令行可能会提示<code>git</code>无法加载的错误，可以使用<code>Git bash</code>执行初始化或者为<code>git</code>配置下环境变量</p></blockquote><ol start="4"><li>本地预览项目</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 默认访问 http://127.0.0.1:4000/</span></span><br><span class="line">hexo server  # 启动服务器 命令可简写为hexo s</span><br></pre></td></tr></table></figure><h3 id="1-3-项目的结构"><a href="#1-3-项目的结构" class="headerlink" title="1.3 项目的结构"></a>1.3 项目的结构</h3><p> 初始化后的项目目录结构如下（<code>linux</code>上通过<code>tree -L 1</code>查看目录结构）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">d-----        2020/11/21     15:25                node_modules</span><br><span class="line">d-----        2020/11/21     15:16                scaffolds</span><br><span class="line">d-----        2020/11/21     15:16                source</span><br><span class="line">d-----        2020/11/21     15:16                themes</span><br><span class="line">-a----        2020/11/21     15:16             71 .gitignore</span><br><span class="line">-a----        2020/11/21     15:26          21142 db.json</span><br><span class="line">-a----        2020/11/21     15:18          56483 package-lock.json</span><br><span class="line">-a----        2020/11/21     15:26            581 package.json</span><br><span class="line">-a----        2020/11/21     15:16           2545 _config.yml</span><br></pre></td></tr></table></figure><p>当前目录下需要关注的文件主要有：</p><ul><li><code>_config.yml</code>: 网站的主配置文件，配置主题，语言等;</li><li><code>scaffolds</code>: 模板文件夹, 模板是指在新建的文章文件中默认填充的内容;</li><li><code>source</code>: 资源文件夹是存放用户资源的地方。除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code> (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹，而其他文件会被拷贝过去;</li><li><code>theme</code>: 主题文件夹，用于存放<code>Hexo</code>的主题资源;</li></ul><p>常用命令解析，<code>[]</code>括号中的内容都是可选项。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo init [folder]  # 新建一个项目</span><br><span class="line"></span><br><span class="line">hexo new [layout] &lt;title&gt;  # 新建一篇文章</span><br><span class="line"></span><br><span class="line">新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;first paper&quot;</span><br><span class="line">INFO  Validating config</span><br><span class="line">Inferno is in development mode.</span><br><span class="line">INFO  =======================================</span><br><span class="line"> ██╗ ██████╗ █████╗ ██████╗ ██╗   ██╗███████╗</span><br><span class="line"> ██║██╔════╝██╔══██╗██╔══██╗██║   ██║██╔════╝</span><br><span class="line"> ██║██║     ███████║██████╔╝██║   ██║███████╗</span><br><span class="line"> ██║██║     ██╔══██║██╔══██╗██║   ██║╚════██║</span><br><span class="line"> ██║╚██████╗██║  ██║██║  ██║╚██████╔╝███████║</span><br><span class="line"> ╚═╝ ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝ ╚══════╝</span><br><span class="line">=============================================</span><br><span class="line">INFO  === Checking package dependencies ===</span><br><span class="line">INFO  === Checking theme configurations ===</span><br><span class="line">INFO  === Registering Hexo extensions ===</span><br><span class="line">INFO  Created: D:\gitLocal\myblog\source\_posts\first-paper.md</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><ul><li><p>站点根目录下的配置文件 <code>_config.yml</code>称为<strong>站点配置文件</strong></p></li><li><p>主题目录下的配置文件<code>_config.yml</code>称为<strong>主题配置文件</strong></p></li></ul><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><h3 id="Next主题"><a href="#Next主题" class="headerlink" title="Next主题"></a>Next主题</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> your-hexo-site</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span></span><br></pre></td></tr></table></figure><h4 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h4><p> 在<strong>站点配置文件</strong>的如下位置更换主题</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><h4 id="Scheme"><a href="#Scheme" class="headerlink" title="Scheme"></a><strong>Scheme</strong></h4><p>Next提供了多种视觉布局方案，在<strong>主题配置文件</strong>中，设置以下项</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Schemes</span></span><br><span class="line">scheme: Muse</span><br><span class="line"><span class="meta">#</span><span class="bash">scheme: Mist</span></span><br><span class="line"><span class="meta">#</span><span class="bash">scheme: Pisces</span></span><br><span class="line"><span class="meta">#</span><span class="bash">scheme: Gemini</span></span><br></pre></td></tr></table></figure><h5 id="站点配置文件的常用设置项"><a href="#站点配置文件的常用设置项" class="headerlink" title="站点配置文件的常用设置项"></a>站点配置文件的常用设置项</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Site</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 网站标题</span></span><br><span class="line">title: 追寻企鹅</span><br><span class="line"><span class="meta">#</span><span class="bash"> 网站副标题</span></span><br><span class="line">subtitle: &#x27;寻鹅人&#x27;</span><br><span class="line">description: &#x27;学习笔记 读书 分享 读后感&#x27;</span><br><span class="line">keywords: &#x27;学习笔记 读书 分享 读后感&#x27;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 用于主题显示文章的作者</span></span><br><span class="line">author: achui</span><br><span class="line"><span class="meta">#</span><span class="bash"> 网站使用的语言 zh-Hans / en</span></span><br><span class="line">language: zh-Hans</span><br><span class="line"><span class="meta">#</span><span class="bash"> 网站时区</span></span><br><span class="line">timezone: &#x27;Asia/Shanghai&#x27;</span><br></pre></td></tr></table></figure><p>访问<code>http://localhost:4000/</code>时如果报如下错误，则</p><p>原因是hexo在5.0之后把swig给删除了需要自己手动安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-renderer-swig</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends &#x27;_layout.swig&#x27; %&#125; &#123;% import &#x27;_macro/post.swig&#x27; as post_template %&#125; &#123;% import &#x27;_macro/sidebar.swig&#x27; as sidebar_template %&#125; &#123;% block title %&#125;&#123;&#123; config.title &#125;&#125;&#123;% if theme.index_with_subtitle and config.subtitle %&#125; - &#123;&#123;config.subtitle &#125;&#125;&#123;% endif %&#125;&#123;% endblock %&#125; &#123;% block page_class %&#125; &#123;% if is_home() %&#125;page-home&#123;% endif -%&#125; &#123;% endblock %&#125; &#123;% block content %&#125;</span><br><span class="line">&#123;% for post in page.posts %&#125; &#123;&#123; post_template.render(post, true) &#125;&#125; &#123;% endfor %&#125;</span><br><span class="line">&#123;% include &#x27;_partials/pagination.swig&#x27; %&#125; &#123;% endblock %&#125; &#123;% block sidebar %&#125; &#123;&#123; sidebar_template.render(false) &#125;&#125; &#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命名法</title>
      <link href="/2021/06/08/%E5%91%BD%E5%90%8D%E6%B3%95/"/>
      <url>/2021/06/08/%E5%91%BD%E5%90%8D%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><hr><p><strong>命名法</strong>是编写程序的一套命名规则，这里介绍三种常用的命名规则。</p><hr><h4 id="1-匈牙利命名法"><a href="#1-匈牙利命名法" class="headerlink" title="1 匈牙利命名法"></a>1 匈牙利命名法</h4><p>该命名规范，要求前缀字母用变量类型的缩写，其余部分用变量的英文或英文的缩写，单词第一个字母大写。</p><p>通常在静态语言中配合类型声明使用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String sMyName = <span class="string">&quot;achui&quot;</span>;</span><br></pre></td></tr></table></figure><p>匈牙利命名法中常用的小写字母的前缀。</p><table><thead><tr><th>前　缀</th><th>类　　型</th></tr></thead><tbody><tr><td>i</td><td>整型</td></tr><tr><td>n</td><td>短整型 (Short Int)</td></tr><tr><td>l</td><td>长整型 (Long Int)</td></tr><tr><td>c</td><td>有符号字符 (Char)</td></tr><tr><td>by</td><td>字节 (Byte)</td></tr><tr><td>w</td><td>Word</td></tr><tr><td>b</td><td>布尔值 (Boolean)</td></tr><tr><td>s</td><td>字符串型</td></tr><tr><td>a</td><td>数组 (Array)</td></tr><tr><td>p</td><td>指针(Pointer)</td></tr><tr><td>lp</td><td>长指针(Long Pointer)</td></tr><tr><td>m_</td><td>类的成员</td></tr><tr><td>fn</td><td>函数</td></tr><tr><td>h</td><td>Handle（句柄）</td></tr></tbody></table><h4 id="2-驼峰命名法"><a href="#2-驼峰命名法" class="headerlink" title="2 驼峰命名法"></a>2 驼峰命名法</h4><p>驼峰命名法是指混合使用大小写字母来构成变量和函数等的名称，通常分为两种形式：</p><ul><li>小驼峰（也可代指驼峰命名法）</li><li>大驼峰（又称帕斯卡命名法）</li></ul><h5 id="2-1-小驼峰"><a href="#2-1-小驼峰" class="headerlink" title="2.1 小驼峰"></a>2.1 小驼峰</h5><p>小驼峰规定除第一个单词之外, 其他单词首字母大写, <code>js</code>中常使用该方式命名。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myName = <span class="string">&quot;achui&quot;</span>;</span><br></pre></td></tr></table></figure><h5 id="2-2-大驼峰"><a href="#2-2-大驼峰" class="headerlink" title="2.2 大驼峰"></a>2.2 大驼峰</h5><p>相比小驼峰法，大驼峰法把第一个单词的首字母也大写了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> MyName = <span class="string">&quot;achui&quot;</span>;</span><br></pre></td></tr></table></figure><h4 id="3-下划线命名法"><a href="#3-下划线命名法" class="headerlink" title="3 下划线命名法"></a>3 下划线命名法</h4><p>该命名规范，要求单词与单词之间通过下划线连接即可，<code>python</code>和<code>shell</code>脚本中常使用该方法命名。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_name = <span class="string">&quot;achui&quot;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 概念 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
